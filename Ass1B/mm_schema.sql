-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2021-09-16 21:51:21 SGT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

--student id: 29975239
--student name: Chin Wen Yuan

--Capture run of script in file mm_schema_output.txt
set echo on
SPOOL mm_schema_output.txt

DROP TABLE assessment CASCADE CONSTRAINTS;

DROP TABLE attendance CASCADE CONSTRAINTS;

DROP TABLE centre CASCADE CONSTRAINTS;

DROP TABLE class CASCADE CONSTRAINTS;

DROP TABLE class_staffing CASCADE CONSTRAINTS;

DROP TABLE classtype CASCADE CONSTRAINTS;

DROP TABLE facility CASCADE CONSTRAINTS;

DROP TABLE member CASCADE CONSTRAINTS;

DROP TABLE payment CASCADE CONSTRAINTS;

DROP TABLE staff CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE assessment (
    ast_no      NUMBER(7) NOT NULL,
    mem_no      NUMBER(7) NOT NULL,
    ast_date    DATE NOT NULL,
    ast_weight  NUMBER(7) NOT NULL,
    ast_bp      VARCHAR2(20) NOT NULL,
    ast_bmi     VARCHAR2(20) NOT NULL,
    ast_vo2max  VARCHAR2(20) NOT NULL,
    stf_id      NUMBER(7) NOT NULL
);

COMMENT ON COLUMN assessment.ast_no IS
    'assessment number (surrogate PK)';

COMMENT ON COLUMN assessment.mem_no IS
    'member number, unique to each member';

COMMENT ON COLUMN assessment.ast_date IS
    'date of assessment completion';

COMMENT ON COLUMN assessment.ast_weight IS
    'weight of member';

COMMENT ON COLUMN assessment.ast_bp IS
    'bp of member';

COMMENT ON COLUMN assessment.ast_bmi IS
    'bmi of member';

COMMENT ON COLUMN assessment.ast_vo2max IS
    'VO2Max of member';

COMMENT ON COLUMN assessment.stf_id IS
    'staff id';

ALTER TABLE assessment ADD CONSTRAINT assessment_pk PRIMARY KEY ( ast_no );

ALTER TABLE assessment ADD CONSTRAINT assessment_nk UNIQUE ( ast_date,
                                                             mem_no );

CREATE TABLE attendance (
    attendance_no     NUMBER(7) NOT NULL,
    ctr_id            NUMBER(7) NOT NULL,
    cls_num           NUMBER(7) NOT NULL,
    mem_no            NUMBER(7) NOT NULL,
    pay_date          DATE NOT NULL,
    session_date      DATE NOT NULL,
    total_attendance  NUMBER(7) NOT NULL
);

COMMENT ON COLUMN attendance.attendance_no IS
    'attendance number (surrogate key)';

COMMENT ON COLUMN attendance.ctr_id IS
    'centre id';

COMMENT ON COLUMN attendance.cls_num IS
    'class number assigned to this class';

COMMENT ON COLUMN attendance.mem_no IS
    'member''s member number who that signed up for the class';

COMMENT ON COLUMN attendance.pay_date IS
    'payment date of member who signed up for the class';

COMMENT ON COLUMN attendance.session_date IS
    'date of class session, used to record if member attended the class';

COMMENT ON COLUMN attendance.total_attendance IS
    'total attendance of specific member in a class (for all session)';

ALTER TABLE attendance ADD CONSTRAINT attendance_pk PRIMARY KEY ( attendance_no );

ALTER TABLE attendance
    ADD CONSTRAINT attendance_nk UNIQUE ( mem_no,
                                          ctr_id,
                                          cls_num );

CREATE TABLE centre (
    ctr_id        NUMBER(7) NOT NULL,
    ctr_name      VARCHAR2(50) NOT NULL,
    ctr_street    VARCHAR2(50) NOT NULL,
    cls_town      VARCHAR2(50) NOT NULL,
    ctr_phone     VARCHAR2(20) NOT NULL,
    ctr_postcode  VARCHAR2(10) NOT NULL
);

COMMENT ON COLUMN centre.ctr_id IS
    'centre id';

COMMENT ON COLUMN centre.ctr_name IS
    'centre name';

COMMENT ON COLUMN centre.ctr_street IS
    'street of centre''s address';

COMMENT ON COLUMN centre.cls_town IS
    'town of centre''s address';

COMMENT ON COLUMN centre.ctr_phone IS
    'centre phone number';

COMMENT ON COLUMN centre.ctr_postcode IS
    'postcode of centre''s address';

ALTER TABLE centre ADD CONSTRAINT centre_pk PRIMARY KEY ( ctr_id );

CREATE TABLE class (
    ctr_id           NUMBER(7) NOT NULL,
    cls_num          NUMBER(7) NOT NULL,
    cls_sdatetime    DATE NOT NULL,
    cls_maxpax       NUMBER(7) NOT NULL,
    cls_numsess      NUMBER(7) NOT NULL,
    cls_cost         NUMBER(7, 2) NOT NULL,
    cls_duration     VARCHAR2(20) NOT NULL,
    cls_type         VARCHAR2(50) NOT NULL,
    gender_specific  VARCHAR2(10),
    fac_roomno       NUMBER(7) NOT NULL
);

COMMENT ON COLUMN class.ctr_id IS
    'centre id';

COMMENT ON COLUMN class.cls_num IS
    'class number assigned to this class';

COMMENT ON COLUMN class.cls_sdatetime IS
    'class start date and time';

COMMENT ON COLUMN class.cls_maxpax IS
    'maximum capacity of a class';

COMMENT ON COLUMN class.cls_numsess IS
    'number of session of the class';

COMMENT ON COLUMN class.cls_cost IS
    'the cost that member pays to join a class, the price is decimal pricing.';

COMMENT ON COLUMN class.cls_duration IS
    'class duration in minutes';

COMMENT ON COLUMN class.cls_type IS
    'class type';

COMMENT ON COLUMN class.fac_roomno IS
    'facility room number';

ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( cls_num,
                                                        ctr_id );

CREATE TABLE class_staffing (
    staffing_no    NUMBER(7) NOT NULL,
    ctr_id         NUMBER(7) NOT NULL,
    cls_num        NUMBER(7) NOT NULL,
    stf_id         NUMBER(7) NOT NULL,
    cls_lead       VARCHAR2(10) NOT NULL,
    first_aidcert  VARCHAR2(10)
);

COMMENT ON COLUMN class_staffing.staffing_no IS
    'class staffing number (surrogate key)';

COMMENT ON COLUMN class_staffing.ctr_id IS
    'centre id';

COMMENT ON COLUMN class_staffing.cls_num IS
    'class number assigned to this class';

COMMENT ON COLUMN class_staffing.stf_id IS
    'staff id';

COMMENT ON COLUMN class_staffing.cls_lead IS
    'inidcating if the staff is the leader of the stated class';

COMMENT ON COLUMN class_staffing.first_aidcert IS
    'inidcating if the staff is first aid certified';

ALTER TABLE class_staffing ADD CONSTRAINT staffing_pk PRIMARY KEY ( staffing_no );

ALTER TABLE class_staffing
    ADD CONSTRAINT staffing_nk UNIQUE ( ctr_id,
                                        cls_num,
                                        stf_id );

CREATE TABLE classtype (
    cls_type  VARCHAR2(50) NOT NULL,
    cls_desc  VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN classtype.cls_type IS
    'class type';

COMMENT ON COLUMN classtype.cls_desc IS
    'class description';

ALTER TABLE classtype ADD CONSTRAINT classtype_pk PRIMARY KEY ( cls_type );

CREATE TABLE facility (
    ctr_id      NUMBER(7) NOT NULL,
    fac_roomno  NUMBER(7) NOT NULL,
    fac_name    VARCHAR2(50) NOT NULL,
    fac_cap     NUMBER(7) NOT NULL,
    fac_desc    VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN facility.ctr_id IS
    'centre id';

COMMENT ON COLUMN facility.fac_roomno IS
    'facility room number';

COMMENT ON COLUMN facility.fac_name IS
    'facility name';

COMMENT ON COLUMN facility.fac_cap IS
    'facility pax capacity';

COMMENT ON COLUMN facility.fac_desc IS
    'facility description';

ALTER TABLE facility ADD CONSTRAINT facility_pk PRIMARY KEY ( fac_roomno,
                                                              ctr_id );

CREATE TABLE member (
    mem_no             NUMBER(7) NOT NULL,
    mem_name           VARCHAR2(50) NOT NULL,
    mem_street         VARCHAR2(50) NOT NULL,
    mem_town           VARCHAR2(50) NOT NULL,
    mem_postcode       VARCHAR2(10) NOT NULL,
    mem_phone          VARCHAR2(50) NOT NULL,
    ctr_id             NUMBER(7) NOT NULL,
    mem_referredby_id  NUMBER(7) NOT NULL
);

COMMENT ON COLUMN member.mem_no IS
    'member number, unique to each member';

COMMENT ON COLUMN member.mem_name IS
    'member full name';

COMMENT ON COLUMN member.mem_street IS
    'street of member''s address';

COMMENT ON COLUMN member.mem_town IS
    'town of member''s address';

COMMENT ON COLUMN member.mem_postcode IS
    'postcode of member''s address';

COMMENT ON COLUMN member.mem_phone IS
    'member''s phone number';

COMMENT ON COLUMN member.ctr_id IS
    'centre id';

COMMENT ON COLUMN member.mem_referredby_id IS
    'member number, unique to each member';

ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( mem_no );

CREATE TABLE payment (
    mem_no    NUMBER(7) NOT NULL,
    pay_date  DATE NOT NULL,
    cls_num   NUMBER(7) NOT NULL,
    ctr_id    NUMBER(7) NOT NULL
);

COMMENT ON COLUMN payment.mem_no IS
    'member number, unique to each member';

COMMENT ON COLUMN payment.pay_date IS
    'date of payment made';

COMMENT ON COLUMN payment.cls_num IS
    'class number assigned to this class';

COMMENT ON COLUMN payment.ctr_id IS
    'centre id';

ALTER TABLE payment ADD CONSTRAINT payment_pk PRIMARY KEY ( mem_no );

CREATE TABLE staff (
    stf_id     NUMBER(7) NOT NULL,
    stf_fname  VARCHAR2(50) NOT NULL,
    stf_lname  VARCHAR2(50) NOT NULL,
    stf_phone  VARCHAR2(50) NOT NULL,
    stf_role   CHAR(1) NOT NULL,
    ctr_id     NUMBER(7) NOT NULL
);

ALTER TABLE staff
    ADD CONSTRAINT stf_role CHECK ( stf_role IN ( 'A', 'C', 'D', 'M', 'P',
                                                  'S', 'T' ) );

COMMENT ON COLUMN staff.stf_id IS
    'staff id';

COMMENT ON COLUMN staff.stf_fname IS
    'staff firstname';

COMMENT ON COLUMN staff.stf_phone IS
    'staff phone number';

COMMENT ON COLUMN staff.ctr_id IS
    'centre id';

ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( stf_id );

ALTER TABLE facility
    ADD CONSTRAINT centre_facility FOREIGN KEY ( ctr_id )
        REFERENCES centre ( ctr_id );

ALTER TABLE staff
    ADD CONSTRAINT centre_staff FOREIGN KEY ( ctr_id )
        REFERENCES centre ( ctr_id );

ALTER TABLE attendance
    ADD CONSTRAINT class_attendance FOREIGN KEY ( cls_num,
                                                  ctr_id )
        REFERENCES class ( cls_num,
                           ctr_id );

ALTER TABLE class
    ADD CONSTRAINT class_classtype FOREIGN KEY ( cls_type )
        REFERENCES classtype ( cls_type );

ALTER TABLE class_staffing
    ADD CONSTRAINT class_staffing FOREIGN KEY ( cls_num,
                                                ctr_id )
        REFERENCES class ( cls_num,
                           ctr_id );

ALTER TABLE class
    ADD CONSTRAINT facility_class FOREIGN KEY ( fac_roomno,
                                                ctr_id )
        REFERENCES facility ( fac_roomno,
                              ctr_id );

ALTER TABLE assessment
    ADD CONSTRAINT member_assessment FOREIGN KEY ( mem_no )
        REFERENCES member ( mem_no );

ALTER TABLE member
    ADD CONSTRAINT member_centre FOREIGN KEY ( ctr_id )
        REFERENCES centre ( ctr_id );

ALTER TABLE member
    ADD CONSTRAINT member_member FOREIGN KEY ( mem_referredby_id )
        REFERENCES member ( mem_no );

ALTER TABLE payment
    ADD CONSTRAINT member_payment FOREIGN KEY ( mem_no )
        REFERENCES member ( mem_no );

ALTER TABLE payment
    ADD CONSTRAINT payment_class FOREIGN KEY ( cls_num,
                                               ctr_id )
        REFERENCES class ( cls_num,
                           ctr_id );

ALTER TABLE assessment
    ADD CONSTRAINT staff_assessment FOREIGN KEY ( stf_id )
        REFERENCES staff ( stf_id );

ALTER TABLE class_staffing
    ADD CONSTRAINT staff_cls_staffing FOREIGN KEY ( stf_id )
        REFERENCES staff ( stf_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             0
-- ALTER TABLE                             27
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL off
set echo off